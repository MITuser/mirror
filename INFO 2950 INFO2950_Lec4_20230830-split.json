[{"pageContent":"INFO 2950: \n\nIntro to Data Science\n\n\nWhiteboards: draw your best \navocado \n陋\n\n\n\nLecture 4\n\n2023-08-29\n\n1","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":1,"lines":{"from":1,"to":16}}}},{"pageContent":"Agenda\n\n1.\nNumpy and SQL stats\n\n2.\nGrouping\n\n3.\nPlotting in Python\n\n4.\nMore SQL Joins\n\n5.\nAdmin\n\n2","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":2,"lines":{"from":1,"to":18}}}},{"pageContent":"Numpy stats in 1-D\n\n>>> a = np.array([[1, 2], [3, 4]])\n\n\nDraw \na\n!\n\nhttps://numpy.org/doc/stable/reference/generated/numpy.mean.html\n \n\n琀\n琀\n \n\n3","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":3,"lines":{"from":1,"to":17}}}},{"pageContent":"Numpy stats in 1-D\n\n>>> a = np.array([[1, 2], [3, 4]])\n\n\n\nhttps://numpy.org/doc/stable/reference/generated/numpy.mean.html\n \n\n1\n\n2\n\n3\n\n4\n\n4","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":4,"lines":{"from":1,"to":18}}}},{"pageContent":"Numpy stats in 1-D\n\n>>> a = np.array([[1, 2], [3, 4]])\n\n>>> np.mean(a)\n\n>>> np.var(a)\n\n>>> np.std(a)\n\n>>> np.median(a)\n\nhttps://numpy.org/doc/stable/reference/generated/numpy.mean.html\n \n\n5","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":5,"lines":{"from":1,"to":16}}}},{"pageContent":"Numpy stats in 1-D\n\n>>> a = np.array([[1, 2], [3, 4]])\n\n>>> np.mean(a)\n\n\n\n\n\n\n2.5\n\n>>> np.var(a)\n\n\n\n\n\n\n1.25\n\n>>> np.std(a)\n\n\n\n\n\n\n1.118033988749895\n\n>>> np.median(a)\n\n\n\n\n\n2.5\n\nhttps://numpy.org/doc/stable/reference/generated/numpy.mean.html\n \n\n6","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":6,"lines":{"from":1,"to":43}}}},{"pageContent":"Numpy stats in 1-D\n\n>>> a = np.array([[1, 2], [3, 4]])\n\n>>> \na.shape\n\n\n\n\n\n\n\nhttps://numpy.org/doc/stable/reference/generated/numpy.mean.html\n \n\n琀\n琀\n \n\n7","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":7,"lines":{"from":1,"to":21}}}},{"pageContent":"Numpy stats in 1-D\n\n>>> a = np.array([[1, 2], [3, 4]])\n\n>>> \na.shape\n\n\n\n\n\n\n(2, 2)\n\n\nhttps://numpy.org/doc/stable/reference/generated/numpy.mean.html\n \n\n8","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":8,"lines":{"from":1,"to":19}}}},{"pageContent":"Numpy stats in 1-D\n\n>>> a = np.array([[1, 2], [3, 4]])\n\n>>> a.shape\n\n\n\n\n\n\n(2, 2)\n\n\nhttps://numpy.org/doc/stable/reference/generated/numpy.mean.html\n \n\nZEROth \n(first) axis\n\nONEth \n(second) axis\n\n9","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":9,"lines":{"from":1,"to":24}}}},{"pageContent":"Numpy stats in 1-D\n\nhttps://numpy.org/doc/stable/reference/generated/numpy.mean.html\n \n\nZEROth \n(first) axis\n\nONEth \n(second) axis\n\n10","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":10,"lines":{"from":1,"to":12}}}},{"pageContent":"Numpy stats in 1-D\n\nsmartdrivetest.com\n\nZEROth \n(first) axis\n\nONEth \n(second) axis\n\n11","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":11,"lines":{"from":1,"to":11}}}},{"pageContent":"Numpy stats in 1-D\n\nsmartdrivetest.com\n\nZEROth \n(first) axis\n\nONEth \n(second) axis\n\n12","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":12,"lines":{"from":1,"to":11}}}},{"pageContent":"Numpy stats in 1-D, axis 0\n\n>>> a = np.array([[1, 2], [3, 4]])\n\n>>> np.mean(a, \naxis=0\n)\n\n>>> np.var(a, \naxis=0\n)\n\n>>> np.std(a, \naxis=0\n)\n\n>>> np.median(a, \naxis=0\n)\n\nhttps://numpy.org/doc/stable/reference/generated/numpy.mean.html\n \n\n13","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":13,"lines":{"from":1,"to":24}}}},{"pageContent":"Numpy stats in 1-D, axis 0\n\n>>> a = np.array([[1, 2], [3, 4]])\n\n>>> np.mean(a, axis=0)\n\n\n\n\narray([2., 3.])\n\n>>> np.var(a, axis=0)\n\n\n\n\narray([1., 1.])\n\n>>> np.std(a, axis=0)\n\n\n\n\narray([1., 1.])\n\n>>> np.median(a, axis=0)\n\n\n\narray([2., 3.])\n\nhttps://numpy.org/doc/stable/reference/generated/numpy.mean.html\n \n\n14","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":14,"lines":{"from":1,"to":35}}}},{"pageContent":"Numpy stats in 1-D, axis 1\n\n>>> a = np.array([[1, 2], [3, 4]])\n\n>>> np.mean(a, \naxis=1\n)\n\n>>> np.var(a, \naxis=1\n)\n\n>>> np.std(a, \naxis=1\n)\n\n>>> np.median(a, \naxis=1\n)\n\nhttps://numpy.org/doc/stable/reference/generated/numpy.mean.html\n \n\n15","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":15,"lines":{"from":1,"to":24}}}},{"pageContent":"Numpy stats in 1-D, axis 1\n\n>>> a = np.array([[1, 2], [3, 4]])\n\n>>> np.mean(a, axis=1)\n\n\n\narray([1.5, 3.5])\n\n>>> np.var(a, axis=1)\n\n\n\narray([0.25, 0.25])\n\n>>> np.std(a, axis=1)\n\n\n\narray([0.5, 0.5])\n\n>>> np.median(a, axis=1)\n\n\narray([1.5, 3.5])\n\nhttps://numpy.org/doc/stable/reference/generated/numpy.mean.html\n \n\n16","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":16,"lines":{"from":1,"to":31}}}},{"pageContent":"https://andrewm4894.com/2020/10/15/numpy-feature-engineering-2x-speed-up-over-pandas/\n \n\n17","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":17,"lines":{"from":1,"to":4}}}},{"pageContent":"Numpy stats in 1-D\n\n>>> a = np.array([[1, 2], [3, 4]])\n\n>>> np.mean(a, axis=0)\n\n\n\narray([2, 3])\n\n\n\n\n\n\n>>> np.mean(a, axis=1)\n\n\narray([1.5, 3.5])\n\nhttps://numpy.org/doc/stable/reference/generated/numpy.mean.html\n \n\naxis\n specifies the dimension you want to \nget rid of\n\n18","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":18,"lines":{"from":1,"to":28}}}},{"pageContent":"Numpy stats in 1-D\n\n>>> a = np.array([[1, 2], [3, 4]])\n\n>>> np.mean(a, axis=0)\n\n\n\narray([2, 3])\n\n\n\n\n\n\n>>> np.mean(a, axis=1)\n\n\narray([1.5, 3.5])\n\nhttps://numpy.org/doc/stable/reference/generated/numpy.mean.html\n \n\naxis\n specifies the dimension you want to \nget rid of\n\n望望\n\n望望\n\n19","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":19,"lines":{"from":1,"to":32}}}},{"pageContent":"Practice\n: Numpy stats in 1-D\n\n>>> a = np.array([[2, 1, 0], [4, 2, 6]])\n\n>>> a.shape\n\n\n\n\n\n(___,____)\n\n>>> np.mean(a, axis=0)\n\n\narray([______])\n\n>>> np.mean(a, axis=1)\n\n\narray([______])\n\n琀\n琀\n \n\n20","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":20,"lines":{"from":1,"to":28}}}},{"pageContent":"Practice: Numpy stats in 1-D\n\n>>> a = np.array([[2, 1, 0], [4, 2, 6]])\n\n>>> a.shape\n\n\n\n\n\n(2,3)\n\n>>> np.mean(a, axis=0)\n\n\narray([3., 1.5, 3.])\n\n>>> np.mean(a, axis=1)\n\n\narray([1., 4.])\n\n2\n\n1\n\n0\n\n4\n\n2\n\n6\n\n21","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":21,"lines":{"from":1,"to":35}}}},{"pageContent":"SQL stats in 1-D\n\nSELECT\n \nAVG\n(\ncolumn_name\n)\n\nFROM\n \ntable_name\n\nWHERE\n \ncondition\n; \n\nSELECT\n \nVARIANCE\n(\ncolumn_name\n)\n\nFROM\n \ntable_name\n\nWHERE\n \ncondition\n; \n\n22","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":22,"lines":{"from":1,"to":35}}}},{"pageContent":"Practice\n: On which axis does this \nSQL code take an average?\n\n琀\n琀\n \n\nSELECT\n \nAVG\n(\ncolumn_name\n)\n\nFROM\n \ntable_name\n\nWHERE\n \ncondition\n; \n\nnp.mean(\ncolumn\n, axis=\n?\n)\n\n23","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":23,"lines":{"from":1,"to":31}}}},{"pageContent":"Practice: On which axis does this \nSQL code take an average?\n\n1\n\n2\n\n3\n\nSELECT\n \nAVG\n(\ncolumn_name\n)\n\nFROM\n \ntable_name\n\nWHERE\n \ncondition\n; \n\nnp.mean(\ncolumn\n, axis=\n0\n)\n\ncolumn_name\n\n24","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":24,"lines":{"from":1,"to":34}}}},{"pageContent":"Practice: On which axis does this \nSQL code take an average?\n\n1\n\n2\n\n3\n\nSELECT\n \nAVG\n(\ncolumn_name\n)\n\nFROM\n \ntable_name\n\nWHERE\n \ncondition\n; \n\nnp.mean(\ncolumn\n)\n\ncolumn_name\n\nWe actually don’t need to \nspecify an axis here since \ncolumn\n is one-dimensional!\n\n25","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":25,"lines":{"from":1,"to":37}}}},{"pageContent":"How do we get the average rating \nacross all restaurants? \n\n26","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":26,"lines":{"from":1,"to":4}}}},{"pageContent":"How do we get the average rating \nacross all restaurants? (answer = 2.0)\n\nSQL:\n SELECT _________ FROM food_df\n\n\nNumpy:\n np.mean(_________)\n\n琀\n琀\n \n\n27","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":27,"lines":{"from":1,"to":15}}}},{"pageContent":"How do we get the average rating \nacross all restaurants? (answer = 2.0)\n\nSQL:\n SELECT \nAVG(Rating)\n FROM food_df\n\n\nNumpy:\n np.mean(\nfood_df[‘Rating’]\n)\n\n28","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":28,"lines":{"from":1,"to":15}}}},{"pageContent":"29","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":29,"lines":{"from":1,"to":1}}}},{"pageContent":"But what if we want to know average \nratings... based on \ntype\n of restaurant?\n\n30","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":30,"lines":{"from":1,"to":6}}}},{"pageContent":"What if we want to know the average food \nrating in Collegetown grouped by food?\n\n\nFood\n\nAvg_Food_Rating\n\nNoodles\n\n2.333\n\nSandwich\n\n2.5\n\nTacos\n\n1.5\n\n31","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":31,"lines":{"from":1,"to":21}}}},{"pageContent":"Common concept, called a\n “GROUP BY”\n\nFood\n\nAvg_Food_Rating\n\nNoodles\n\n2.333\n\nSandwich\n\n2.5\n\nTacos\n\n1.5\n\n32","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":32,"lines":{"from":1,"to":20}}}},{"pageContent":"Group By’s in Pandas\n\n.groupby() of a column gives you \na GroupBy object, but it doesn’t \nseem to really do anything yet...\n\n33","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":33,"lines":{"from":1,"to":7}}}},{"pageContent":"Group By’s in Pandas\n\nBut you can do things \non\n a \npandas GroupBy object!\n\n34","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":34,"lines":{"from":1,"to":8}}}},{"pageContent":"Group By’s in SQL\n\n35","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":35,"lines":{"from":1,"to":3}}}},{"pageContent":"Think, Pair, Share\n: When would it \nnot\n \nmake sense to use a Group By?\n\nFood\n\nAvg_Food_Rating\n\nNoodles\n\n2.333\n\nSandwich\n\n2.5\n\nTacos\n\n1.5\n\n(A good group by)\n\n36","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":36,"lines":{"from":1,"to":25}}}},{"pageContent":"When would it \nnot\n make sense to use a \nGroup By?\n\n●\nIf all the food in Ithaca \nwere entirely noodles, \ngrouping by Food \nwouldn’t be informative\n\n\n●\nWe want multiple values \nin the group by! \nOtherwise it’s the same \nas just doing Avg(Rating)\n\n37","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":37,"lines":{"from":1,"to":19}}}},{"pageContent":"When would it \nnot\n make sense to use a \nGroup By?\n\n●\nIf the food were diverse \nbut we didn’t have any \ncorresponding data (no \nratings), then grouping \ndoesn’t do much!\n\n\n●\nUsing a Group By, we \ncould still report the count \n(# restaurants per Food \ntype), but that’s it\n\n38","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":38,"lines":{"from":1,"to":20}}}},{"pageContent":"1 min break & attendance!\n\ntinyurl.com/4a8kfjz5\n\n39","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":39,"lines":{"from":1,"to":5}}}},{"pageContent":"The pandas library helps us read CSV files\n\navocados_df = pd.read_csv(\n\"avocado.csv\"\n)\n\n\navocados_df.head()\n\nhttps://www.kaggle.com/datasets/neuromusic/avocado-prices\n \n\n40","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":40,"lines":{"from":1,"to":13}}}},{"pageContent":"What’s going on here?\n\navocados_df = pd.read_csv(\n\"avocado.csv\"\n)\n\n\navocados_df.head()\n\nhttps://www.kaggle.com/datasets/neuromusic/avocado-prices\n \n\n41","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":41,"lines":{"from":1,"to":13}}}},{"pageContent":"The pandas library helps us read CSV files\n\navocados_df = pd.read_csv(\n\"avocado.csv\"\n)\n\n\navocados_df.head()\n\nIf we don't specify an index column, pandas \ncreates one with line numbers by default\n\n\nThis dataset was previously loaded in pandas, \nand then saved to a file \nwith the new line \nnumber column\n\n\nWhen we loaded it just now, pandas didn't \nknow that the first column is the index, so it \nmade a new one\n\n42","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":42,"lines":{"from":1,"to":24}}}},{"pageContent":"Did we read the values correctly?\n\navocados_df.dtypes\n\n43","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":43,"lines":{"from":1,"to":5}}}},{"pageContent":"Did we read the values correctly?\n\navocados_df.dtypes\n\npandas uses \nobject\n for columns it \ndoesn't know what to do with. \nWe won't need the date field, so \nlooks good to me!\n\n44","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":44,"lines":{"from":1,"to":12}}}},{"pageContent":"duckdb runs SQL on pandas data frames\n\nduckdb.sql(\"\nSELECT\n Date, AveragePrice \nFROM\n avocados_df \nWHERE\n \nregion == \n'Syracuse'\n LIMIT \n5\n\")\n\n45","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":45,"lines":{"from":1,"to":16}}}},{"pageContent":"duckdb runs SQL on pandas data frames\n\nduckdb.sql(\"\nSELECT\n Date, AveragePrice \nFROM\n avocados_df \nWHERE\n \nregion == \n'Syracuse'\n LIMIT \n5\n\")\n\nhow did it know\n that \navocados_df is a thing?\n\n\nduckdb interprets SQL table \nnames as variable names, and \nchecks if that value is a pandas \ndataframe\n\n46","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":46,"lines":{"from":1,"to":26}}}},{"pageContent":"duckdb runs SQL on pandas data frames\n\nduckdb.sql(\"\nSELECT\n Date, AveragePrice \nFROM\n avocados_df \nWHERE\n \nregion == \n'Syracuse'\n LIMIT \n5\n\")\n\nEach output column lists the \nname of the variable (\"Date\", \n\"AveragePrice\") and the data \ntype of the variable\n\n\nvarchar is a string (\"variable \nnumber of characters\")\n\n47","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":47,"lines":{"from":1,"to":25}}}},{"pageContent":"duckdb runs SQL on pandas data frames\n\nduckdb.sql(\"\nSELECT\n \nCOUNT\n(*) \nFROM\n avocados_df\")\n\nThe count function returns the \ntotal number of rows selected\n\n\nThe output is a new integer \nvariable called \"count_star()\"\n\n48","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":48,"lines":{"from":1,"to":18}}}},{"pageContent":"GROUP BY divides data by facets\n\nduckdb.sql(\"\"\"\nSELECT\n \nyear\n, \nCOUNT\n(*) \nAS\n total_rows_per_year\n\nFROM\n avocados_df \nGROUP\n \nBY\n \nyear\n\"\"\")\n\nhere I'm using AS to give the \noutput of count(*) a name\n\n\nI'm using \"\"\" quotes for a \nmulti-line string\n\n49","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":49,"lines":{"from":1,"to":29}}}},{"pageContent":"GROUP BY divides data by facets\n\nduckdb.sql(\"\"\"\nSELECT\n \nyear\n, \nCOUNT\n(*) \nAS\n total_rows_per_year\n\nFROM\n avocados_df \nGROUP\n \nBY\n \nyear\n\"\"\")\n\nhere I'm using AS to give the \noutput of count(*) a name\n\n\nI'm using \"\"\" quotes for a \nmulti-line string\n\n\nYou can also use \\ to break up \na multi-line string\n\nduckdb.sql(\"\nSELECT\n \nyear\n, \\\n\n  \nCOUNT\n(*) \nAS\n total_rows_per_year \\\n\nFROM\n avocados_df \\\n\nGROUP\n \nBY\n \nyear\n\")\n\n50","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":50,"lines":{"from":1,"to":55}}}},{"pageContent":"GROUP BY divides data by facets\n\nduckdb.sql(\"\"\"\nSELECT\n \nyear\n, \nCOUNT\n(*) \nAS\n total_rows_per_year\n\nFROM\n avocados_df \nGROUP\n \nBY\n \nyear\n\"\"\")\n\nInstead of one count we are \ngrouping by year and counting \neach group.\n\n\nThis only makes sense if we \nreturn at least one more \ncolumn, like year.\n\n51","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":51,"lines":{"from":1,"to":31}}}},{"pageContent":"GROUP BY divides data by facets\n\nduckdb.sql(\"\"\"\nSELECT\n \nyear\n, \nCOUNT\n(*) \nAS\n total_rows_per_year\n\nFROM\n avocados_df \nGROUP\n \nBY\n \nyear\n\"\"\").df()\n\nThe previous examples \nreturned duckdb objects, here \nI'm adding \n.df()\n to convert the \noutput to a pandas dataframe\n\n52","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":52,"lines":{"from":1,"to":29}}}},{"pageContent":"Fill in the blank!\n\nduckdb.sql(\"\"\"\nSELECT\n \nyear\n, \nAVG\n(average_price)\n\nFROM\n avocados_df \nGROUP\n \nBY\n \nyear\n\"\"\").df()\n\nannual_avg_price\n\n琀\n琀\n \n\n53","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":53,"lines":{"from":1,"to":26}}}},{"pageContent":"duckdb.sql(\"\"\"\nSELECT\n \nyear\n, \nAVG\n(average_price)\n\nFROM\n avocados_df \nGROUP\n \nBY\n \nyear\n\"\"\").df()\n\nannual_avg_price\n\n AS annual_avg_price\n\nFill in the blank!\n\n54","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":54,"lines":{"from":1,"to":24}}}},{"pageContent":"You can save queries as a variable!\n\nquery = \"\"\"\nSELECT\n region, \nAVG\n(AveragePrice) \nAS\n region_price,\n \n\nSTDDEV(AveragePrice) \nAS\n region_std\n\nFROM\n avocados_df \nGROUP\n \nBY\n region\"\"\"\n\n\nduckdb.sql(query).df()\n\n55","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":55,"lines":{"from":1,"to":26}}}},{"pageContent":"And, you can save dataframe output!\n\nquery = \"\"\"\nSELECT\n region, \nAVG\n(AveragePrice) \nAS\n region_price,\n \n\nSTDDEV(AveragePrice) \nAS\n region_std\n\nFROM\n avocados_df \nGROUP\n \nBY\n region\"\"\"\n\n\nregion_mean_sd = duckdb.sql(query).df()\n\nRather than display the \nreturned data frame, save it as \na variable\n\n\nSQL turns one df into a \ndifferent df!\n\n56","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":56,"lines":{"from":1,"to":34}}}},{"pageContent":"Think, Pair, Share\n: What will this do?\n\nSELECT\n region, \nAVG\n(AveragePrice) \nAS\n region_price \nFROM\n \navocados_df \nGROUP\n \nBY\n region \nORDER\n \nBY\n region_price \nDESC\n LIMIT \n10\n\n57","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":57,"lines":{"from":1,"to":25}}}},{"pageContent":"What will this do?\n\nSELECT\n region, \nAVG\n(AveragePrice) \nAS\n region_price \nFROM\n \navocados_df \nGROUP\n \nBY\n region \nORDER\n \nBY\n region_price \nDESC\n LIMIT \n10\n\nFor each region\n\n\nGet the average price\n\n\nSort the regions from highest \nto lowest average price\n\n\nShow only the first 10\n\n58","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":58,"lines":{"from":1,"to":36}}}},{"pageContent":"Where do you guess has \nthe most expensive \navocados?\n (on avg, from ~2015-2018) \n\nSELECT\n region, \nAVG\n(AveragePrice) \nAS\n region_price \nFROM\n \navocados_df \nGROUP\n \nBY\n region \nORDER\n \nBY\n region_price \nDESC\n LIMIT \n10\n\nFor each region\n\n\nGet the average price\n\n\nSort the regions from highest \nto lowest average price\n\n\nShow only the first 10\n\n琀\n琀\n \n\n59","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":59,"lines":{"from":1,"to":43}}}},{"pageContent":"What will this do?\n\nSELECT\n region, \nAVG\n(AveragePrice) \nAS\n region_price \nFROM\n \navocados_df \nGROUP\n \nBY\n region \nORDER\n \nBY\n region_price \nDESC\n LIMIT \n10\n\nFor each region\n\n\nGet the average price\n\n\nSort the regions from highest \nto lowest average price\n\n\nShow only the first 10\n\n60","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":60,"lines":{"from":1,"to":36}}}},{"pageContent":"What will this do?\n\nSELECT\n region, \nAVG\n(AveragePrice) \nAS\n region_price \nFROM\n \navocados_df \nGROUP\n \nBY\n region \nORDER\n \nBY\n region_price \nDESC\n LIMIT \n10\n\nTip: you always want to \nSELECT on the column(s) \nyou GROUP BY. Otherwise \nyou won’t know what the \nother stats correspond to!\n\n61","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":61,"lines":{"from":1,"to":30}}}},{"pageContent":"Making plots in python\n\nmatplotlib\n\npyplot\n\nseaborn\n\npandas\n\nbetter integration with \npandas, plots look nicer\n\nmake plots directly from \ndata frame\n\nfrom matplotlib \nimport pyplot\n\n62","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":62,"lines":{"from":1,"to":20}}}},{"pageContent":"pandas.DataFrame\n.plot(\nx,y\n)\n\npandas\n\nmake plots directly from \ndata frame\n\n63","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":63,"lines":{"from":1,"to":11}}}},{"pageContent":"pandas.DataFrame\n.hist(\nx\n)\n\npandas\n\nmake plots directly from \ndata frame\n\n64","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":64,"lines":{"from":1,"to":11}}}},{"pageContent":"Making plots in python\n\nmatplotlib\n\npyplot\n\nseaborn\n\npandas\n\nbetter integration with \npandas, plots look nicer\n\nmake plots directly from \ndata frame\n\nfrom matplotlib \nimport pyplot\n\nimport\n seaborn\n\nfrom\n matplotlib \nimport\n pyplot\n\n65","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":65,"lines":{"from":1,"to":28}}}},{"pageContent":"Making plots in python\n\nmatplotlib\n\npyplot\n\nseaborn\n\npandas\n\nbetter integration with \npandas, plots look nicer\n\nmake plots directly from \ndata frame\n\nfrom matplotlib \nimport pyplot\n\nimport\n seaborn \nas\n sns\n\nfrom\n matplotlib \nimport\n pyplot \nas\n plt\n\nOptional (but \nstandard) nicknames!\n\n66","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":66,"lines":{"from":1,"to":35}}}},{"pageContent":"s\neaborn\n.scatterplot(x=\n\"region_price\"\n, y=\n\"region_std\"\n, data=region_mean_sd)\n\nfor\n i, row \nin\n region_mean_sd.iterrows():\n\np\nyplo\nt.text(x=row[\n\"region_price\"\n], y=row[\n\"region_std\"\n], s=row[\n\"region\"\n] )\n\n67","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":67,"lines":{"from":1,"to":24}}}},{"pageContent":"seaborn.scatterplot(x=\n\"region_price\"\n, y=\n\"region_std\"\n, data=region_mean_sd)\n\nfor\n i, row \nin\n region_mean_sd.iterrows():\n\npyplot.text(x=row[\n\"region_price\"\n], y=row[\n\"region_std\"\n], s=row[\n\"region\"\n] )\n\n$$$\n\n68","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":68,"lines":{"from":1,"to":22}}}},{"pageContent":"1 min break!\n\nhttps://www.reddit.com/r/ProgrammerHumor/comments/obr4py/they_just_dont_understand/\n \n\n69","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":69,"lines":{"from":1,"to":6}}}},{"pageContent":"Why bother with SQL joins?\n\n●\nYour data will come from multiple sources and you \nwill need to figure out how to combine them\n\n\n●\nClassic \ninterview\n question format: “here are two \ndata frames; tell me the SQL code to get \n[description \nof resulting joined df]\n”\n\n○\nYou will need to choose the correct join \nstatement for this!\n\n70","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":70,"lines":{"from":1,"to":21}}}},{"pageContent":"Example: JOIN between two files\n\nThe USDA Atlas of Rural and \nSmall-Town America actually \ncontains information about \nthe entire country.\n\n\nWhich has recently grown \nfaster,  urban counties or rural \ncounties?\n\n71","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":71,"lines":{"from":1,"to":13}}}},{"pageContent":"Data spread across two files\n\nThe data comes in six CSV files\n\n\nUrban/Rural classification is in \nCountyClassifications.csv\n\n\nPopulation growth is in \nPeople.csv\n\n72","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":72,"lines":{"from":1,"to":13}}}},{"pageContent":"What would you Google to resolve this?\n\ncounty_classifications =\n \npd.read_csv(\n\"Rural_Atlas_Update24/CountyClassifications.csv\"\n)\n \ncounty_population =\n \npd.read_csv(\n\"Rural_Atlas_Update24/People.csv\"\n)\n\n---------------------------------------------------------------------------\n\nUnicodeDecodeError\n                        Traceback (most recent call last)\n\nCell \nIn[43], line 1\n\n----> 1\n county_classifications \n=\n \npd\n.\nread_csv(\n\"Rural_Atlas_Update24/CountyClassifications.csv\"\n)\n\n      2\n county_population \n=\n \npd\n.\nread_csv(\n\"Rural_Atlas_Update24/People.csv\"\n)\n\n...\n\nUnicodeDecodeError\n: 'utf-8' codec can't decode byte 0xf1 in \nposition 77183: invalid continuation byte\n\n[39]:\n\n\n琀\n琀\n \n\n73","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":73,"lines":{"from":1,"to":56}}}},{"pageContent":"What would you Google to resolve this?\n\ncounty_classifications =\n \npd.read_csv(\n\"Rural_Atlas_Update24/CountyClassifications.csv\"\n)\n \ncounty_population =\n \npd.read_csv(\n\"Rural_Atlas_Update24/People.csv\"\n)\n\n---------------------------------------------------------------------------\n\nUnicodeDecodeError\n                        Traceback (most recent call last)\n\nCell \nIn[43], line 1\n\n----> 1\n county_classifications \n=\n \npd\n.\nread_csv(\n\"Rural_Atlas_Update24/CountyClassifications.csv\"\n)\n\n      2\n county_population \n=\n \npd\n.\nread_csv(\n\"Rural_Atlas_Update24/People.csv\"\n)\n\n...\n\nUnicodeDecodeError\n: 'utf-8' codec can't decode byte 0xf1 in \nposition 77183: invalid continuation byte\n\n[39]:\n\n\n74\n\nTry googling \n“UnicodeDecodeError utf-8” \nfirst; realize there are lots of \ndifferent byte-related answers. \nSo, append “invalid continuation \nbyte” to search...","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":74,"lines":{"from":1,"to":59}}}},{"pageContent":"What would you Google to resolve this?\n\ncounty_classifications =\n \npd.read_csv(\n\"Rural_Atlas_Update24/CountyClassifications.csv\"\n)\n \ncounty_population =\n \npd.read_csv(\n\"Rural_Atlas_Update24/People.csv\"\n)\n\n---------------------------------------------------------------------------\n\nUnicodeDecodeError\n                        Traceback (most recent call last)\n\nCell \nIn[43], line 1\n\n----> 1\n county_classifications \n=\n \npd\n.\nread_csv(\n\"Rural_Atlas_Update24/CountyClassifications.csv\"\n)\n\n      2\n county_population \n=\n \npd\n.\nread_csv(\n\"Rural_Atlas_Update24/People.csv\"\n)\n\n...\n\nUnicodeDecodeError\n: 'utf-8' codec can't decode byte 0xf1 in \nposition 77183: invalid continuation byte\n\n[39]:\n\n\n75\n\nhttps://stackoverflow.com/questions/5552555/unicodedecodeerror-invalid-continuation-byte","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":75,"lines":{"from":1,"to":54}}}},{"pageContent":"Problem: character encodings\n\ncounty_classifications =\n \npd.read_csv(\n\"Rural_Atlas_Update24/CountyClassifications.csv\"\n)\n \ncounty_population =\n \npd.read_csv(\n\"Rural_Atlas_Update24/People.csv\"\n)\n\nDoña Ana county in New \nMexico is not being read \ncorrectly!\n\n\nThe file is in an older, \npre-Unicode format\n\n---------------------------------------------------------------------------\n\nUnicodeDecodeError\n                        Traceback (most recent call last)\n\nCell \nIn[43], line 1\n\n----> 1\n county_classifications \n=\n \npd\n.\nread_csv(\n\"Rural_Atlas_Update24/CountyClassifications.csv\"\n)\n\n      2\n county_population \n=\n \npd\n.\nread_csv(\n\"Rural_Atlas_Update24/People.csv\"\n)\n\n...\n\nUnicodeDecodeError\n: 'utf-8' codec can't decode byte 0xf1 in \nposition 77183: invalid continuation byte\n\n[39]:\n\n\n76","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":76,"lines":{"from":1,"to":60}}}},{"pageContent":"Problem: delimiters\n\ncounty_classifications =\n \npd.read_csv(\n\"Rural_Atlas_Update24/CountyClassifications.csv\"\n,\n\n                                     encoding=\n\"LATIN-1\"\n)\n\ncounty_classifications.head()\n\nCSV means \"comma separated \nvalues\", but it looks like this \nfile \nactually uses tabs \n\\t\n \n\n77","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":77,"lines":{"from":1,"to":22}}}},{"pageContent":"Problem: data types\n\ncounty_classifications =\n \npd.read_csv(\n\"Rural_Atlas_Update24/CountyClassifications.csv\"\n,\n\n                         delimiter=\n\"\\t\"\n, encoding=\n\"LATIN-1\"\n)\n\ncounty_classifications.head()\n\nFIPS is a code like a zip code \nfor US places\n\n\nAutauga, AL should be \n01001\n\n78","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":78,"lines":{"from":1,"to":24}}}},{"pageContent":"Problem: data types\n\ncounty_population =\n \npd.read_csv(\n\"Rural_Atlas_Update24/People.csv\"\n,\n\n                         delimiter=\n\"\\t\"\n, encoding=\n\"LATIN-1\"\n)\n\ncounty_population.head()\n\nThis data frame has a different \nname (FIPS vs FIPStxt), but it \nseems to be the same data \ntype, without the leading 0s\n\n\nAs long as they're both wrong \nin the same way...\n\n79","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":79,"lines":{"from":1,"to":26}}}},{"pageContent":"Can we match rows in two tables?\n\nWhat fields in the \ntwo data frames \nwould we use to find \nrows that match?\n\n琀\n琀\n \n\n80","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":80,"lines":{"from":1,"to":12}}}},{"pageContent":"Can we match rows in two tables?\n\nDefinitely FIPS (since it’s \nthe most granular); could \nadditionally match on \nState and County\n\n\nOk to just match on State \nor only on County? NO, \nsince they’re not \nnecessarily enough to \nidentify the FIPS\n\n81","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":81,"lines":{"from":1,"to":15}}}},{"pageContent":"Can we match rows in two tables?\n\nThese two columns have \ndifferent names, is that \nokay for matching?\n\n82","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":82,"lines":{"from":1,"to":7}}}},{"pageContent":"SQL JOIN\n\ncounty_df = duckdb.sql(\"\"\"\nSELECT\n c.FIPStxt, c.State, c.County,\n \nc.RuralUrbanContinuumCode2013, p.PopChangeRate1019\n\nFROM\n county_classifications, county_population\n\nWHERE\n \ncounty_classifications\n.FIPStxt = \ncounty_population\n.FIPS\"\"\").df()\n\n\nYes, we can match FIPStxt to \nFIPS as long as we identify \nwhich dataset it came from!\n\n\n\n83","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":83,"lines":{"from":1,"to":26}}}},{"pageContent":"SQL JOIN\n\ncounty_df = duckdb.sql(\"\"\"\nSELECT\n c.FIPStxt, c.State, c.County,\n \nc.RuralUrbanContinuumCode2013, p.PopChangeRate1019\n\nFROM\n county_classifications c, county_population p\n\nWHERE\n c.FIPStxt = p.FIPS\"\"\").df()\n\n\nMore readable:\n\n\nIn the FROM clause we give \neach data frame a short name \n(c and p, respectively), and \nthen in the WHERE clause we \nmatch the values\n\n84","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":84,"lines":{"from":1,"to":25}}}},{"pageContent":"county_df = duckdb.sql(\"\"\"\n\nSELECT\n State, County, PopChangeRate1019\n\nFROM\n county_df\n\nORDER\n \nBY\n PopChangeRate1019 \nDESC\n\"\"\").df()\n\n\nWe can now run SQL queries \non the joined data frame\n\n\n\n85","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":85,"lines":{"from":1,"to":22}}}},{"pageContent":"county_df = duckdb.sql(\"\"\"\n\nSELECT\n State, County, PopChangeRate1019\n\nFROM\n county_df\n\nORDER\n \nBY\n PopChangeRate1019 \nDESC\n\"\"\").df()\n\n\nWe can now run SQL queries \non the joined data frame\n\n\nWhat is unusual about Loving \ncounty, TX?\n\n86","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":86,"lines":{"from":1,"to":24}}}},{"pageContent":"seaborn.boxplot(x=\n\"RuralUrbanContinuumCode2013\"\n,\n\n                y=\n\"PopChangeRate1019\"\n, data=county_df)\n\npyplot.show()\n\nIs Code = 9 urban or rural?\n\n\nWhich grew faster on average, \nurban or rural counties?\n\n87\n\n琀\n琀","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":87,"lines":{"from":1,"to":20}}}},{"pageContent":"seaborn.boxplot(x=\n\"RuralUrbanContinuumCode2013\"\n,\n\n                y=\n\"PopChangeRate1019\"\n, data=county_df)\n\npyplot.show()\n\nIs Code = 9 is rural.\n\n\nUrban counties (closer to code \n= 1) had higher population \nchange rates than rural ones.\n\n88","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":88,"lines":{"from":1,"to":18}}}},{"pageContent":"seaborn.boxplot(x=\n\"RuralUrbanContinuumCode2013\"\n,\n\n                y=\n\"PopChangeRate1019\"\n, data=county_df)\n\npyplot.show()\n\nThis is Loving, TX!\n\n89","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":89,"lines":{"from":1,"to":13}}}},{"pageContent":"seaborn.boxplot(x=\n\"RuralUrbanContinuumCode2013\"\n,\n\n                y=\n\"PopChangeRate1019\"\n, data=county_df)\n\npyplot.show()\n\n90","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":90,"lines":{"from":1,"to":11}}}},{"pageContent":"Last time: INNER JOIN\n\n91","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":91,"lines":{"from":1,"to":3}}}},{"pageContent":"92","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":92,"lines":{"from":1,"to":1}}}},{"pageContent":"df1 and df2: when to skip class?\n\nTable: `df1`\n\nTable: `df2`\n\n93","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":93,"lines":{"from":1,"to":7}}}},{"pageContent":"What classes do I have when I \nalso know about the weather?\n\nTable: `df1`\n\nTable: `df2`\n\n94","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":94,"lines":{"from":1,"to":8}}}},{"pageContent":"duckdb.sql(\"\nSELECT\n * \nFROM\n df1\n INNER JOIN\n df2 \\\n\nON\n df1.day_of_week = df2.weekday\").df()\n\n\nWhat classes do I have when I \nalso know about the weather?\n\nTable: `df1`\n\nTable: `df2`\n\n95","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":95,"lines":{"from":1,"to":20}}}},{"pageContent":"What classes do I have when I also know about \nthe weather AND I’m willing to go outside?\n\nTable: `df1`\n\nTable: `df2`\n\n琀\n琀\n\nduckdb.sql(\"\nSELECT\n * \nFROM\n df1\n INNER JOIN\n df2 \\\n\nON\n df1.day_of_week = df2.weekday\").df()\n\n\n96","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":96,"lines":{"from":1,"to":23}}}},{"pageContent":"duckdb.sql(\"\nSELECT\n day_of_week, weather, course \\\n\n\n\nFROM\n df1\n INNER JOIN\n df2 \\\n\nON\n df1.day_of_week = df2.weekday \\\n\nWHERE\n weather>0\").df()\n\n\nWhat classes do I have when I also know about \nthe weather AND I’m willing to go outside?\n\nTable: `df1`\n\nTable: `df2`\n\nduckdb.sql(\"\nSELECT\n * \nFROM\n df1\n INNER JOIN\n df2 \\\n\nON\n df1.day_of_week = df2.weekday\").df()\n\n\n97","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":97,"lines":{"from":1,"to":38}}}},{"pageContent":"I care about the 5-day weather forecast, and want \nto know when of those days I have classes\n\nTable: `df1`\n\nTable: `df2`\n\n98","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":98,"lines":{"from":1,"to":8}}}},{"pageContent":"I care about the 5-day weather forecast, and want \nto know when of those days I have classes\n\nTable: `df1`\n\nTable: `df2`\n\n99\n\nduckdb.sql(\"\nSELECT\n day_of_week, weather, course \\\n\n\n\nFROM\n df1\n LEFT JOIN\n df2 \\\n\nON\n df1.day_of_week = df2.weekday\").df()","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":99,"lines":{"from":1,"to":22}}}},{"pageContent":"I care about the 5-day weather forecast, and want \nto know when of those days I have classes\n\nTable: `df1`\n\nTable: `df2`\n\n100\n\nduckdb.sql(\"\nSELECT\n day_of_week, weather, course \\\n\n\n\nFROM\n df1\n LEFT JOIN\n df2 \\\n\nON\n df1.day_of_week = df2.weekday\").df()\n\n\nHow do we sort this?","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":100,"lines":{"from":1,"to":25}}}},{"pageContent":"ORDER BY on str is alphabetical!\n\nTable: `df1`\n\nTable: `df2`\n\n101\n\nduckdb.sql(\"\nSELECT\n day_of_week, weather, course \\\n\n\n\nFROM\n df1\n LEFT JOIN\n df2 \\\n\nON\n df1.day_of_week = df2.weekday \\\n\nORDER BY\n day_of_week\").df()","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":101,"lines":{"from":1,"to":24}}}},{"pageContent":"I only care about the days I have classes.\n\nWhat’s the weather like then?\n\nTable: `df1`\n\nTable: `df2`\n\n102","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":102,"lines":{"from":1,"to":9}}}},{"pageContent":"I only care about the days I have classes.\n\nWhat’s the weather like then?\n\nTable: `df1`\n\nTable: `df2`\n\n103\n\nduckdb.sql(\"\nSELECT\n weekday, course, weather \\\n\n\n\nFROM\n df1\n RIGHT JOIN\n df2 \\\n\nON\n df1.day_of_week = df2.weekday\").df()","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":103,"lines":{"from":1,"to":23}}}},{"pageContent":"Right join: what if I SELECT day_of_week?\n\nTable: `df1`\n\nTable: `df2`\n\n104\n\nduckdb.sql(\"\nSELECT\n day_of_week, course, weather \\\n\n\n\nFROM\n df1\n RIGHT JOIN\n df2 \\\n\nON\n df1.day_of_week = df2.weekday\").df()\n\n\nduckdb.sql(\"\nSELECT\n weekday, course, weather \\\n\n\n\nFROM\n df1\n RIGHT JOIN\n df2 \\\n\nON\n df1.day_of_week = df2.weekday\").df()","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":104,"lines":{"from":1,"to":36}}}},{"pageContent":"Same or different output?\n\nTable: `df1`\n\nTable: `df2`\n\nCode (a):\n\nCode (b):\n\n105\n\nduckdb.sql(\"\nSELECT\n weekday, course, weather \\\n\n\n\nFROM\n df1\n RIGHT JOIN\n df2 \\\n\nON\n df1.day_of_week = df2.weekday\").df()\n\n\nduckdb.sql(\"\nSELECT\n weekday, course, weather \\\n\n\n\nFROM\n df2\n LEFT JOIN\n df1 \\\n\nON\n df1.day_of_week = df2.weekday\").df()\n\n\n琀\n琀","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":105,"lines":{"from":1,"to":44}}}},{"pageContent":"Same output!\n\nTable: `df1`\n\nTable: `df2`\n\n106\n\nduckdb.sql(\"\nSELECT\n weekday, course, weather \\\n\n\n\nFROM\n df1\n RIGHT JOIN\n df2 \\\n\nON\n df1.day_of_week = df2.weekday\").df()\n\n\nduckdb.sql(\"\nSELECT\n weekday, course, weather \\\n\n\n\nFROM\n df2\n LEFT JOIN\n df1 \\\n\nON\n df1.day_of_week = df2.weekday\").df()","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":106,"lines":{"from":1,"to":36}}}},{"pageContent":"Left join vs. right join?\n\n●\n[FROM a LEFT JOIN b]\n \nis \nnot\n always the same as \n[FROM a RIGHT JOIN b]\n\n\n●\n[FROM a LEFT JOIN b]\n \nis\n always the same as \n[FROM b RIGHT JOIN a]\n\n\n\n107","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":107,"lines":{"from":1,"to":21}}}},{"pageContent":"Left join vs. right join?\n\n●\n[FROM a LEFT JOIN b]\n \nis \nnot\n always the same as \n[FROM a RIGHT JOIN b]\n\n\n●\n[FROM a LEFT JOIN b]\n \nis\n always the same as \n[FROM b RIGHT JOIN a]\n\n\n●\nIn practice... no one uses\n\nright joins \n(except in interviews!)\n \n\n\n108\n\nhttps://www.reddit.com/r/ProgrammerHumor/comments/10kzn98/right_join_sqls_neglected_stepchild/","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":108,"lines":{"from":1,"to":30}}}},{"pageContent":"I want to combine all of my data to get the most \ninformation I can about both weather and classes.\n\nTable: `df1`\n\nTable: `df2`\n\n109","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":109,"lines":{"from":1,"to":8}}}},{"pageContent":"duckdb.sql(\"\nSELECT\n * \\\n\n\n\nFROM\n df1\n FULL JOIN\n df2 \\\n\nON\n df1.day_of_week = df2.weekday\").df()\n\n\nI want to combine all of my data to get the most \ninformation I can about both weather and classes.\n\nTable: `df1`\n\nTable: `df2`\n\n(also sometimes called an ‘outer join’)\n\n110","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":110,"lines":{"from":1,"to":25}}}},{"pageContent":"Full join + WHERE no None in ON variables?\n\nTable: `df1`\n\nTable: `df2`\n\nNone\n\n111\n\nduckdb.sql(\"\nSELECT\n *\n F\nROM\n df1\n FULL JOIN\n df2 \\\n\nON\n df1.day_of_week = df2.weekday\").df()","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":111,"lines":{"from":1,"to":21}}}},{"pageContent":"duckdb.sql(\"\nSELECT\n *\n FROM\n df1\n FULL JOIN\n df2 \\\n\nON\n df1.day_of_week = df2.weekday \\\n\nWHERE\n day_of_week IS NOT NULL AND \\\n\n w\neekday\n IS NOT NULL\").df()\n\n\nFull join + WHERE no None in ON variables?\n\nTable: `df1`\n\nTable: `df2`\n\n112\n\nduckdb.sql(\"\nSELECT\n *\n FROM\n df1\n FULL JOIN\n df2 \\\n\nON\n df1.day_of_week = df2.weekday\").df()","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":112,"lines":{"from":1,"to":37}}}},{"pageContent":"Full join + WHERE... look familiar?\n\nTable: `df1`\n\nTable: `df2`\n\n113\n\nduckdb.sql(\"\nSELECT\n *\n FROM\n df1\n FULL JOIN\n df2 \\\n\nON\n df1.day_of_week = df2.weekday \\\n\nWHERE\n day_of_week IS NOT NULL AND \\\n\n weekday IS NOT NULL\").df()","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":113,"lines":{"from":1,"to":23}}}},{"pageContent":"Full join + WHERE... look familiar?\n\nTable: `df1`\n\nTable: `df2`\n\n114\n\nduckdb.sql(\"\nSELECT\n *\n FROM\n df1\n FULL JOIN\n df2 \\\n\nON\n df1.day_of_week = df2.weekday \\\n\nWHERE\n day_of_week IS NOT NULL AND \\\n\n weekday IS NOT NULL\").df()\n\n\nduckdb.sql(\"\nSELECT\n *\n FROM\n df1\n INNER JOIN\n df2 \\\n\nON\n df1.day_of_week = df2.weekday\").df()","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":114,"lines":{"from":1,"to":35}}}},{"pageContent":"Joins in the real world\n\n●\n Your data may not always be clean & matching\n\n\n○\nIf you have no duplicate values for your ON \nvariable, and the same values for both tables, \nthen all joins will be the same\n\n\n○\nBut this rarely happens in the wild!\n\n\n●\nYou may need to join more than 2 tables\n\n\n○\nDaisy-chain join statements to merge multiple \ntimes \n\n115","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":115,"lines":{"from":1,"to":25}}}},{"pageContent":"Bonus interview question\n: how to get \nthe median in SQL?\n\n●\nSQL has no built-in median() function!\n\n\n●\nBut, you can write your own functions to get the median... how?\n\n\nhttps://stackoverflow.com/questions/1291152/simple-way-to-calculate-median-with-mysql\n \n\n116","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":116,"lines":{"from":1,"to":16}}}},{"pageContent":"SQL medians without Group By\n\nSELECT \nAVG(dd.val) as median_val\n\nFROM \n(\n\nSELECT \nd.val, @rownum:=@rownum+1\n as `\nrow_number`, @total_rows:=@rownum\n\n  FROM \ndata d, (\nSELECT \n@rownum:=0) r\n\n  WHERE \nd.val is\n NOT NULL\n\n  ORDER BY \nd.val\n\n)\n as dd\n\nWHERE \ndd.row_number\n IN \n( FLOOR((@total_rows+1)/2), FLOOR((@total_rows+2)/2)\n );\n\n\nhttps://stackoverflow.com/questions/1291152/simple-way-to-calculate-median-with-mysql\n \n\n117","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":117,"lines":{"from":1,"to":39}}}},{"pageContent":"SQL medians with Group By and Cross Join\n\nSELECT x.val from data x, data y\n\nGROUP BY x.val\n\nHAVING SUM(SIGN(1-SIGN(y.val-x.val)))/COUNT(*) > .5\n\nLIMIT 1\n\n\n\nhttps://stackoverflow.com/questions/1291152/simple-way-to-calculate-median-with-mysql\n \n\n118\n\nCode runs faster & looks cleaner!","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":118,"lines":{"from":1,"to":18}}}},{"pageContent":"SQL medians with Group By and Cross Join\n\nSELECT x.val from data x, data y\n\nGROUP BY x.val\n\nHAVING SUM(SIGN(1-SIGN(y.val-x.val)))/COUNT(*) > .5\n\nLIMIT 1\n\n\n\nhttps://stackoverflow.com/questions/1291152/simple-way-to-calculate-median-with-mysql\n \n\n119","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":119,"lines":{"from":1,"to":16}}}},{"pageContent":"Please don’t let markers \nand whiteboards walk \naway with you! \n݋\n\n120","metadata":{"source":"docs/INFO_2950/INFO2950_Lec4_20230830.pdf","pdf":{"version":"1.10.100","info":{"PDFFormatVersion":"1.4","IsAcroFormPresent":false,"IsXFAPresent":false,"Title":"INFO2950_Lec4_20230830","Creator":"Google"},"metadata":null,"totalPages":120},"loc":{"pageNumber":120,"lines":{"from":1,"to":6}}}}]